AWSTemplateFormatVersion: '2010-09-09'
Description: 'LoL Wrapped - Fase 1: DynamoDB + AppSync Infrastructure'

Parameters:
  ProjectName:
    Type: String
    Default: lol-wrapped
    Description: Nombre del proyecto
  
  Environment:
    Type: String
    Default: dev
    AllowedValues:
      - dev
      - prod
    Description: Ambiente de deployment

Resources:
  # ===== DYNAMODB TABLE =====
  PlayerWrappedTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Sub '${ProjectName}-${Environment}-PlayerWrappeds'
      BillingMode: PAY_PER_REQUEST
      
      # Partition Key + Sort Key
      AttributeDefinitions:
        - AttributeName: PK
          AttributeType: S
        - AttributeName: SK
          AttributeType: S
        - AttributeName: GSI1PK
          AttributeType: S
        - AttributeName: GSI1SK
          AttributeType: S
      
      KeySchema:
        - AttributeName: PK
          KeyType: HASH
        - AttributeName: SK
          KeyType: RANGE
      
      # Global Secondary Index para queries por estado
      GlobalSecondaryIndexes:
        - IndexName: GSI1
          KeySchema:
            - AttributeName: GSI1PK
              KeyType: HASH
            - AttributeName: GSI1SK
              KeyType: RANGE
          Projection:
            ProjectionType: ALL
      
      # TTL para auto-cleanup
      TimeToLiveSpecification:
        AttributeName: ttl
        Enabled: true
      
      # Streams para Lambda triggers (Fase 2)
      StreamSpecification:
        StreamViewType: NEW_AND_OLD_IMAGES
      
      # Point-in-time recovery (opcional pero recomendado)
      PointInTimeRecoverySpecification:
        PointInTimeRecoveryEnabled: true
      
      Tags:
        - Key: Project
          Value: !Ref ProjectName
        - Key: Environment
          Value: !Ref Environment

  # ===== IAM ROLE PARA APPSYNC =====
  AppSyncServiceRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub '${ProjectName}-${Environment}-AppSyncServiceRole'
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: appsync.amazonaws.com
            Action: sts:AssumeRole
      
      Policies:
        - PolicyName: DynamoDBAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - dynamodb:GetItem
                  - dynamodb:PutItem
                  - dynamodb:UpdateItem
                  - dynamodb:DeleteItem
                  - dynamodb:Query
                  - dynamodb:Scan
                Resource:
                  - !GetAtt PlayerWrappedTable.Arn
                  - !Sub '${PlayerWrappedTable.Arn}/index/*'
      
      Tags:
        - Key: Project
          Value: !Ref ProjectName
        - Key: Environment
          Value: !Ref Environment

  # ===== APPSYNC API =====
  GraphQLApi:
    Type: AWS::AppSync::GraphQLApi
    Properties:
      Name: !Sub '${ProjectName}-${Environment}-API'
      AuthenticationType: API_KEY
      
      LogConfig:
        CloudWatchLogsRoleArn: !GetAtt AppSyncLogsRole.Arn
        FieldLogLevel: ERROR
      
      Tags:
        - Key: Project
          Value: !Ref ProjectName
        - Key: Environment
          Value: !Ref Environment

  # API Key para autenticación
  GraphQLApiKey:
    Type: AWS::AppSync::ApiKey
    Properties:
      ApiId: !GetAtt GraphQLApi.ApiId
      Description: API Key for development
      Expires: !Ref 'AWS::NoValue' # No expira (solo para dev)

  # Schema GraphQL
  GraphQLSchema:
    Type: AWS::AppSync::GraphQLSchema
    Properties:
      ApiId: !GetAtt GraphQLApi.ApiId
      DefinitionS3Location: ./schema.graphql

  # Data Source - DynamoDB
  PlayerWrappedDataSource:
    Type: AWS::AppSync::DataSource
    Properties:
      ApiId: !GetAtt GraphQLApi.ApiId
      Name: PlayerWrappedsDynamoDB
      Type: AMAZON_DYNAMODB
      ServiceRoleArn: !GetAtt AppSyncServiceRole.Arn
      
      DynamoDBConfig:
        AwsRegion: !Ref 'AWS::Region'
        TableName: !Ref PlayerWrappedTable

  # Resolver: Query.getWrapped
  GetWrappedResolver:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId: !GetAtt GraphQLApi.ApiId
      TypeName: Query
      FieldName: getWrapped
      DataSourceName: !GetAtt PlayerWrappedDataSource.Name
      RequestMappingTemplateS3Location: ./resolvers/Query.getWrapped.req.vtl
      ResponseMappingTemplateS3Location: ./resolvers/Query.getWrapped.res.vtl

  # Resolver: Mutation.requestWrapped
  RequestWrappedResolver:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId: !GetAtt GraphQLApi.ApiId
      TypeName: Mutation
      FieldName: requestWrapped
      DataSourceName: !GetAtt PlayerWrappedDataSource.Name
      RequestMappingTemplateS3Location: ./resolvers/Mutation.requestWrapped.req.vtl
      ResponseMappingTemplateS3Location: ./resolvers/Mutation.requestWrapped.res.vtl

  # Resolver: Mutation.updateWrappedStatus
  UpdateWrappedStatusResolver:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId: !GetAtt GraphQLApi.ApiId
      TypeName: Mutation
      FieldName: updateWrappedStatus
      DataSourceName: !GetAtt PlayerWrappedDataSource.Name
      RequestMappingTemplateS3Location: ./resolvers/Mutation.updateWrappedStatus.req.vtl
      ResponseMappingTemplateS3Location: ./resolvers/Mutation.updateWrappedStatus.res.vtl

  # ===== CLOUDWATCH LOGS ROLE =====
  AppSyncLogsRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: appsync.amazonaws.com
            Action: sts:AssumeRole
      
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSAppSyncPushToCloudWatchLogs

Outputs:
  # DynamoDB
  DynamoDBTableName:
    Description: Nombre de la tabla DynamoDB
    Value: !Ref PlayerWrappedTable
    Export:
      Name: !Sub '${ProjectName}-${Environment}-TableName'
  
  DynamoDBTableArn:
    Description: ARN de la tabla DynamoDB
    Value: !GetAtt PlayerWrappedTable.Arn
    Export:
      Name: !Sub '${ProjectName}-${Environment}-TableArn'
  
  DynamoDBStreamArn:
    Description: ARN del stream de DynamoDB (para Lambda)
    Value: !GetAtt PlayerWrappedTable.StreamArn
    Export:
      Name: !Sub '${ProjectName}-${Environment}-StreamArn'
  
  # AppSync
  GraphQLApiEndpoint:
    Description: GraphQL API Endpoint
    Value: !GetAtt GraphQLApi.GraphQLUrl
    Export:
      Name: !Sub '${ProjectName}-${Environment}-GraphQLEndpoint'
  
  GraphQLApiId:
    Description: GraphQL API ID
    Value: !GetAtt GraphQLApi.ApiId
    Export:
      Name: !Sub '${ProjectName}-${Environment}-GraphQLApiId'
  
  GraphQLApiKey:
    Description: API Key para autenticación
    Value: !GetAtt GraphQLApiKey.ApiKey
  
  # Region
  AWSRegion:
    Description: AWS Region
    Value: !Ref 'AWS::Region'

  # Variables de entorno para frontend
  FrontendEnvVars:
    Description: Variables de entorno para el frontend (copiar a .env)
    Value: !Sub |
      PUBLIC_APPSYNC_ENDPOINT=${GraphQLApi.GraphQLUrl}
      PUBLIC_APPSYNC_API_KEY=${GraphQLApiKey.ApiKey}
      PUBLIC_APPSYNC_REGION=${AWS::Region}

